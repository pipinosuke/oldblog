<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>サーバーレス開発 on All Time NEET</title>
    <link>https://blog.nosugi.tech/tags/%E3%82%B5%E3%83%BC%E3%83%90%E3%83%BC%E3%83%AC%E3%82%B9%E9%96%8B%E7%99%BA/</link>
    <description>Recent content in サーバーレス開発 on All Time NEET</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 31 Mar 2019 09:48:36 +0900</lastBuildDate>
    
	<atom:link href="https://blog.nosugi.tech/tags/%E3%82%B5%E3%83%BC%E3%83%90%E3%83%BC%E3%83%AC%E3%82%B9%E9%96%8B%E7%99%BA/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Firebaseでサーバーレス開発  ログイン編(iOS版)</title>
      <link>https://blog.nosugi.tech/tech/firebase-auth-ios/</link>
      <pubDate>Sun, 31 Mar 2019 09:48:36 +0900</pubDate>
      
      <guid>https://blog.nosugi.tech/tech/firebase-auth-ios/</guid>
      <description>参考URL 基本的には公式ドキュメントを参考にしましたが端折られている部分もあったので、こちらのQiitaの記事も合わせて参考にしました。
導入 cocoapodsでインストールします。cocoapodsの使い方については割愛します。そのあとは下の画像のような感じでかなり親切にやってくれます、簡単に導入できました。 
共通部分 AppDelegateに追記。公式ドキュメントに従ってdidFinishLaunchingWithOptionsに書くとエラーになるので注意。尚、このことは公式ドキュメントでは言及されていない。
import Firebase import FirebaseAuthUI class AppDelegate: UIResponder, UIApplicationDelegate { var window: UIWindow? //以下追記 override init() { super.init() FirebaseApp.configure() } func application(_ app: UIApplication, open url: URL, options: [UIApplication.OpenURLOptionsKey : Any]) -&amp;gt; Bool { let sourceApplication = options[UIApplication.OpenURLOptionsKey.sourceApplication] as! String? if FUIAuth.defaultAuthUI()?.handleOpen(url, sourceApplication: sourceApplication) ?? false { return true } // other URL handling goes here. return false }  ツイッターログイン 1. Twitterログインの有効化 developer.</description>
    </item>
    
  </channel>
</rss>